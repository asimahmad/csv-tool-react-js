{"version":3,"sources":["Components/DataTable.js","Components/UploadCsv.js","App.js","reportWebVitals.js","index.js"],"names":["DataTable","useState","pageSize","setPageSize","postsPerPage","setPostsPerPage","currentPage","setCurrentPage","search","setSearch","posts","setPosts","useEffect","document","title","axios","get","then","res","data","_","slice","take","value","catch","err","console","log","pageCount","Math","ceil","length","pages","range","className","onClick","csvRow","dataArray","i","push","id","userId","completed","join","csvString","a","createElement","href","target","download","body","appendChild","click","Download","type","min","defaultValue","onChange","e","placeholder","map","head","style","cursor","filter","val","toString","toLowerCase","includes","post","index","page","pageNumber","startIndex","paginate","UploadCsv","React","highlighted","setHighlighted","setData","onDragEnter","onDragLeave","onDragOver","preventDefault","onDrop","Array","from","dataTransfer","files","file","forEach","text","result","parse","header","item","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7984cf35.chunk.js","sourcesContent":["import React, {useState,useEffect} from 'react';\nimport axios from 'axios'\nimport _ from 'lodash'\n\nconst DataTable = () => {\n\n    // const pageSize = 10;\n    const [pageSize, setPageSize] = useState(10); \n    const headers = [\"Id\", \"UserId\", \"Title\", \"Status\"]\n    const [postsPerPage, setPostsPerPage] = useState()\n    const [currentPage, setCurrentPage] = useState(1);\n    const [search, setSearch] = useState(\"\");\n    // const [sorting, setSorting] = useState({colType:\"\", sortOrder:\"\"})\n\n    const [posts, setPosts] = useState();\n    useEffect(()=> {\n        document.title = 'Assesment by Asim'\n        axios.get('http://jsonplaceholder.typicode.com/todos')\n        .then(res =>{\n            // console.log(res.data);\n            setPosts(res.data);\n            setPostsPerPage(_(res.data).slice(0).take(pageSize).value())\n        }).catch(err =>{\n            console.log(err)\n        })\n    }, [])\n\n    const paginate = (pageNumber) =>{\n        setCurrentPage(pageNumber);\n        const startIndex = (pageNumber-1)*pageSize;\n        const postsPerPage = _(posts).slice(startIndex).take(pageSize).value();\n        setPostsPerPage(postsPerPage)\n    }\n\n    const pageCount = posts? Math.ceil(posts.length/pageSize) :0\n    if(pageCount === 1) return null;\n    const pages = _.range(1, pageCount+1);\n   \n    const Download = () =>{\n        let csvRow = [];\n        let dataArray = [['id', 'userId', 'title', 'completed']];\n        for(let i =0;i<posts.length;i++){\n           dataArray.push([posts[i].id, posts[i].userId, posts[i].title, posts[i].completed])\n        }\n        console.log(\"ArrayData length\", dataArray.length)\n        for(let i=0;i<dataArray.length;i++){\n            csvRow.push(dataArray[i].join(\",\"));\n        }\n        let csvString = csvRow.join(\"%0A\");\n        console.log(csvString)\n        let a = document.createElement(\"a\");\n        a.href= 'data:attachment/csv,'+csvString;\n        a.target = \"_Blank\";\n        a.download = \"data.csv\";\n        document.body.appendChild(a);\n        a.click()\n    }\n    return (\n        <div>\n            <button className=\"form-control download\" onClick={() => Download()}>\n                {posts?\"download as csv\":\"Use the template\"}\n                </button>\n            <input className=\"form-control pagesize\" type='number' min=\"10\" defaultValue={10} onChange={(e)=>\n                { if(e.target.value<10 || e.target.value === null || e.target.value === ''){\n                    setPageSize(25);\n                } else if(e.target.value > posts.length){\n                    console.log(posts.length)\n                    setPageSize(e.target.value)\n                } \n                else{\n                    setPageSize(e.target.value)\n                } }}/>\n\n            <input  className=\"form-control search\" type='text' placeholder='Search' onChange={(e) => {setSearch(e.target.value)}}/>\n        \n            {!postsPerPage? (\"\"): (\n                <table className=\"table table-bordered\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            {headers.map(head => (\n                                <th key={head} style={{cursor:'pointer'}} onClick={() =>console.log(head)} >{head}</th>\n                            ))}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            postsPerPage.filter(val =>{\n                                if(search===''){\n                                    return val;\n                                }else if(\n                                    val.id.toString().toLowerCase().includes(search.toLowerCase()) ||\n                                    val.userId.toString().toLowerCase().includes(search.toLowerCase()) ||\n                                    val.title.toLowerCase().includes(search.toLowerCase()) ||\n                                    val.completed.toString().toLowerCase().includes(search.toLowerCase())\n                                ){\n                                    return val;\n                                }\n                            }).map((post, index) =>{\n                                return (\n                                <tr key={index}>\n                                    <td>{post.id}</td>\n                                    <td>{post.userId}</td>\n                                    <td>{post.title}</td>\n                                    <td>\n                                        <p className={post.completed ? \"btn btn-success\": \"btn btn-danger\"}>\n                                            {post.completed? \"Completed\": \"Pending\"}\n                                        </p>\n                                    </td>\n                                </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            )}\n            <nav className=\"d-flex justify-content-center\">\n                <ul className=\"pagination\">\n                    {\n                        pages.map((page) =>{\n                            return <li key={page} className={ page === currentPage? \"page-item active\": \"page-item\"}>\n                                <p className=\"page-link para\" onClick={()=>paginate(page)}>{page}</p>\n                                </li>\n                        })\n                    }\n                </ul>\n            </nav>\n        </div>\n    );\n};\n\nexport default DataTable;"," \nimport React, {useState} from \"react\";\nimport { parse } from \"papaparse\";\n\nconst UploadCsv= ()=> {\n  const [highlighted, setHighlighted] = React.useState(false);\n  const [data, setData] = useState([]);\n\n  const resetData = () =>{\n    setData([])\n  }\n\n  return (\n    <>\n    <div className=\"drag\">\n      <h1>CSV Tool</h1>\n      <div\n        className={`drag1 ${\n          highlighted ? \"dragHigh\" : \"dragNor\"\n        }`}\n        onDragEnter={() => {\n          setHighlighted(true);\n        }}\n        onDragLeave={() => {\n          setHighlighted(false);\n        }}\n        onDragOver={(e) => {\n          e.preventDefault();\n        }}\n        onDrop={(e) => {\n          e.preventDefault();\n          setHighlighted(false);\n\n          Array.from(e.dataTransfer.files)\n            .filter((file) => file.type === \"text/csv\")\n            .forEach(async (file) => {\n              const text = await file.text();\n              const result = parse(text, { header: true });\n              setData(() => result.data);\n            });\n        }}\n      >\n        DROP CSV file\n      </div>\n      </div>\n      <button className=\"form-control reset\" onClick={() => resetData()}>Reset</button>\n\n      <ul>\n        {data.map((item) => (\n          <li key={item.id}>\n            <strong>{item.id}</strong>: {item.title}\n            </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nexport default UploadCsv;","import './App.css';\nimport DataTable from './Components/DataTable'\nimport UploadCsv from './Components/UploadCsv'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <div className=\"container\">\n        <UploadCsv />\n      <DataTable />\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}